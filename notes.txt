HTML- Structuring, Markup Language. Used to add and struture elements in a web page.
HTML- Hyper Text Markup Language.

boiler plate---> Basic Development setup of HTML.

<!Doctype> we are using latest version of HTML.

Tag---> <> </> void   
        <> null void




Typography tags
____________________

heading tags---> h1,h2,....h6.

paragraph--->p

bold--> b

strong---> strong

italic---. i 

break---> br

Horizontal Line----> hr



Common tags 
____________________

anchor---> a (href---> Hyper Reference target--->blank or same)

Ordered List---> ol>li

image ---> used to add image in web flow...!(img)



Forms
____________________

To get data from the visitors.

<form> </form>


Input ---> text, password, email, number, range, date, time, (chechbox, radio), color, submit, reset.

placeholder,
<label for=""></label>   for value must math the value of name attribute in the deserved input tag.

required.



Table
____________________

Row and colomn
heading
body

table,thead,tbody,tr,th,td.

thead-Table head
tbody-Table Body 
tr-Table Row 
td-Table Data.


CSS
____________________

Cascading Style Sheet.

Purpose: Adding Style to HTML page.


selector{
        property: value (unit);
}



Inserting CSS to HTML:

1)Internal--- <style> inside <head>
2)External--- we should create external css file in the same directory
3)Inline--- inside the tag itself using "style" attribute.



css will prioritize the inline css more than anything.


Types of selectors
________________________

universal selector ---- used to select all the elements in HTML (*).

tagname selector ---- used to select elements by their tag name.(p,h1,ul,li...)

classname selector ---- using special attribute called class. (.) a tag can have multiple class names and one class name can be given to multiple tags.

id name selector --- using special attribute called id. (#) a tag can have only one id. then the id should not be repeated again


**css will prioritize more specifications**

inline > id > class > tag > *

ctrl+shift+i---> open developer tools.

Basic Properties of CSS
________________________________

units for measuring the distance
____________________________________

px,cm,inch,%,vw,vh.

constants
-----------
px--> 0.26mm
cm-->10mm
inch

variables
------------
%---> percentage (value/100) 90%--->(90/100*(parent width))
vw---> visual width 1vw-100vw. 20vw---> (20% of the whole screens width). the percentage of the container acoording to the whole screen's width
vh---> visual height 1vh-100vh. 20vh---> (20 % of the whole screen's height).

Dimensions properties
==============
1)width
2)height

color properties
____________________
1)background-color  ---> color's name, hex values, rgb colors
2)color --> text color


Typography properties
________________________

1)font-size.
2)font-weight.
3)font-family.
4)font-style.
5)text-align.---used to justify the content.


Box Modelling  ---> seperating the contents in webpage as a individual boxes.
____________________

border -----> outer-line (border)
padding---> space between the contents and the outerline
margin ---> is the outer space that seperates the container fro other containers


tips: for margin and padding.

property: all direction; one value

property: top,bottom(vertical) right,left(horizontal) ;  two values

property: top right bottom left ; four values



Border-radius
____________________

border-radius: ;

used to make cured edge.(px, %).


Box Shadow.
____________________

box-shadow: offset-x offset-y blur-radius spread-radius color ;

offset-x: how much distance the shadow should be away from the container Horizontally(positive for right, negative for left)
offset-y: how much distance the shadow should be away from the container vertically(positive for bottom, negative for top)
blur-radius: the amout of blur of the shadow
spread-radius: the size of shadow.
color: the shadow's color.




Combination of selectors
________________________

descendant selector--->   (space)   example: parents are ascendent childen are descendent.  every tags that are inside the ascendent tag (
        A descendant is any element that is nested within another element, at any depth.
)

selector selector{

}

direct descendant selector--->  (>) (A direct descendant is an element that is an immediate child of a parent.)


group selector----> allows you to apply same css properties to multiple elements.

psuedo-selectors---> allows you to target the elements based on it's state and position or other characteristics that are not directly defined in HTML.

Hover----> targets the selector when the mouse hovers over it.
(:hover)


nth-child----> targets the nth child of parent.(:nth-child())

first-letter---> selects the first letter of the element.
(::first-letter)

placeholder---> selects the placeholder text.(::placeholder)

focus--->  targets element when it gets focused.(:focos)

Before , After---> See it in further class.




Z-index: value--> -999 to 999.


Positioning
____________________

used to  position elements in a webpage.


{
        position: value;
}

static--default position.

relative --- used to move the element relative to it's original position---(positioned ancestor).

absolute--- used to position an element according to it's (nearest positioned ancestor).
1)z-index change. element will move front of the screen. z-index value as 1.
2)it will position the element on the top left corner of the ( parent )container by default.

fixed,

sticky.