HTML- Structuring, Markup Language. Used to add and struture elements in a web page.
HTML- Hyper Text Markup Language.

boiler plate---> Basic Development setup of HTML.

<!Doctype> we are using latest version of HTML.

Tag---> <> </> void   
        <> null void




Typography tags
____________________

heading tags---> h1,h2,....h6.

paragraph--->p

bold--> b

strong---> strong

italic---. i 

break---> br

Horizontal Line----> hr



Common tags 
____________________

anchor---> a (href---> Hyper Reference target--->blank or same)

Ordered List---> ol>li

image ---> used to add image in web flow...!(img)



Forms
____________________

To get data from the visitors.

<form> </form>


Input ---> text, password, email, number, range, date, time, (chechbox, radio), color, submit, reset.

placeholder,
<label for=""></label>   for value must math the value of name attribute in the deserved input tag.

required.



Table
____________________

Row and colomn
heading
body

table,thead,tbody,tr,th,td.

thead-Table head
tbody-Table Body 
tr-Table Row 
td-Table Data.


CSS
____________________

Cascading Style Sheet.

Purpose: Adding Style to HTML page.


selector{
        property: value (unit);
}



Inserting CSS to HTML:

1)Internal--- <style> inside <head>
2)External--- we should create external css file in the same directory
3)Inline--- inside the tag itself using "style" attribute.



css will prioritize the inline css more than anything.


Types of selectors
________________________

universal selector ---- used to select all the elements in HTML (*).

tagname selector ---- used to select elements by their tag name.(p,h1,ul,li...)

classname selector ---- using special attribute called class. (.) a tag can have multiple class names and one class name can be given to multiple tags.

id name selector --- using special attribute called id. (#) a tag can have only one id. then the id should not be repeated again


**css will prioritize more specifications**

inline > id > class > tag > *

ctrl+shift+i---> open developer tools.

Basic Properties of CSS
________________________________

units for measuring the distance
____________________________________

px,cm,inch,%,vw,vh.

constants
-----------
px--> 0.26mm
cm-->10mm
inch

variables
------------
%---> percentage (value/100) 90%--->(90/100*(parent width))
vw---> visual width 1vw-100vw. 20vw---> (20% of the whole screens width). the percentage of the container acoording to the whole screen's width
vh---> visual height 1vh-100vh. 20vh---> (20 % of the whole screen's height).

Dimensions properties
==============
1)width
2)height

color properties
____________________
1)background-color  ---> color's name, hex values, rgb colors
2)color --> text color


Typography properties
________________________

1)font-size.
2)font-weight.
3)font-family.
4)font-style.
5)text-align.---used to justify the content.


Box Modelling  ---> seperating the contents in webpage as a individual boxes.
____________________

border -----> outer-line (border)
padding---> space between the contents and the outerline
margin ---> is the outer space that seperates the container fro other containers


tips: for margin and padding.

property: all direction; one value

property: top,bottom(vertical) right,left(horizontal) ;  two values

property: top right bottom left ; four values



Border-radius
____________________

border-radius: ;

used to make cured edge.(px, %).


Box Shadow.
____________________

box-shadow: offset-x offset-y blur-radius spread-radius color ;

offset-x: how much distance the shadow should be away from the container Horizontally(positive for right, negative for left)
offset-y: how much distance the shadow should be away from the container vertically(positive for bottom, negative for top)
blur-radius: the amout of blur of the shadow
spread-radius: the size of shadow.
color: the shadow's color.




Combination of selectors
________________________

descendant selector--->   (space)   example: parents are ascendent childen are descendent.  every tags that are inside the ascendent tag (
        A descendant is any element that is nested within another element, at any depth.
)

selector selector{

}

direct descendant selector--->  (>) (A direct descendant is an element that is an immediate child of a parent.)


group selector----> allows you to apply same css properties to multiple elements.

psuedo-selectors---> allows you to target the elements based on it's state and position or other characteristics that are not directly defined in HTML.

Hover----> targets the selector when the mouse hovers over it.
(:hover)


nth-child----> targets the nth child of parent.(:nth-child())

first-letter---> selects the first letter of the element.
(::first-letter)

placeholder---> selects the placeholder text.(::placeholder)

focus--->  targets element when it gets focused.(:focos)

Before , After---> See it in further class.




Z-index: value--> -999 to 999.


Positioning
____________________

used to  position elements in a webpage.


{
        position: value;
}

static--default position.

relative --- used to move the element relative to it's original position---(positioned ancestor).

absolute--- used to position an element according to it's (nearest positioned ancestor).
1)z-index change. element will move front of the screen. z-index value as 1.
2)it will position the element on the top left corner of the ( parent )container by default.

fixed ---- the element will be removed from document flow and positioned relative to the screen. the element is fixed when we scroll.

sticky --- Combination of relative and fixed positioning.


Transform
____________________

syntax:{transform: value}

allows to visually manipulate the elements by rotating, scaling, translating.

translate---> moves the elements along the X and Y axis.

1)translate---moves element horizontally and Vertically.
2)Rotate--> clockwise anti clockwise rotation
3)rotateX,rotateY---> 3D rotations.

4)scale-->changes the size of the element



Display Properties:
____________________

Blocks,
Inline,

Inline-Blocks.

Blocks----> will start a new line and occupy the full width in default. Example: (div, p...h1 to h6, ul ol, li)

Inline Type---> elements do not start new line only occupies as much as width needed.(can't set width or height).example: a, img, button, label, span, input.


syntax:
display: value;  


inline-block: width and height can be given like block elements. it will no start a new line like inline elements.


none




visibility:hidden;





Float property:
____________________

float property is used to position the element by floating them to left or right. allowing other contents wrap around it.



Flex Box:
____________________

it is a layout model that provides an efficient way to distribute space and align items within a container.

main axis and cross axis.

display: flex; that enables flex box to the container

flex-direction: row, column...;  defines main axis and cross axis then align items towords it.(row)

gap: used to create a gap b/w items.

Main axis
==========
justify-content: start, end, center, space-between, ;  this is used to position the items through the main axis.

Cross axis
==========
align-items: center, end , start, stretch; this is used to position the items through the cross axis.(stretch)



Flex   -->  only to the child.
____________________

used to mention the grow ratio. 2:2:2 ---> (ratio) empty spaces (5)


Flex-wrap--> defines whether the contents wrap onto nextline or not.

flex-wrap: wrap,nowrap; (nowrap)


Grid:
____________________

A powerful layout system designed to create 2D(two dimensional) layouts on webpage.it allows you to arrange items in rows and columns.

display:grid; to enable grid layout.
grid-template-columns:  ; to assign  width to the tenplate columns
grid-template-rows:  ; to assign  height to the tenplate rows
grid-auto-rows:  ; to assign  height to the additional rows



gap. row-gap, column-gap.



For Childs:
-------------

grid-column and grid-row: defines the where the child should start and where should it end.



Media Queiries
____________________

It is used to apply styles conditionally, based on  specific characteritics of the viewport.

Allowing the website to adopt various screen sizes.


syntax:
____________________

@media (condition){
        
}


combination of conditions: and

conditions:
____________________

max-width: value
min-width: value








JavaScript
____________________ programming language.

JS versatile and high-level programming and interpreted language.


human readable code---> byte code.


Used in websites to enhance the experience of static.

Dynamically Typed Language.

Setting Up Development Environment
____________________________________

.js---> is the extexsion for JavaScript.


commenting---> //


Syntax of JavaScript:
________________________________

";" use this symbol to terminate a statement


DataType:
____________________

1)Number----> (Int, float). 0,1,2....-1,-2,-3,....  0.5,5.6.....
2)String----> (character, word or sentence). "" or '', concat--> "+" "," ,char-->'a','b'.."yes","no","I love you".
3)boolean----> true or false.(1 or 0)

4)functions
5)objects
6)Arrays
7)undefined
8)Nan
9)Null


Functions 
---------------

functions or just block of code, we can reuse it whenever we want.


1. Function Declaration ("function")
------------------------------------

function name(){
        // block of code.
}

2. Function Expression
-----------------------------

const name=function(){
    // block of variable
}

3) Arrow function
________________________

const virat = () => {
    // block of code
};


Arguments (or) parameter
-------------------------

is a set of values we pass into a function.

Return Keyword 
------------------
it is used to exit a function and send back the value to the caller.



Objects 
-----------
it is just a collection of key-value pairs.

{
        key: value,
        key2:value2,
        key3:value3.......
}

Dot value--> objName.value
Sqr bracket---> objName["key"]

Deleting key in an object---> delete objName.key

Nested Object 
--------------

nesting an object inside another object.

{
        key:{

        }
}

This Keyword 
-------------
used to access a key inside that object itself


Inserting a variable in a string `${varName}`


Arrays(List)
____________________
arrays  is used to hold multiple datatypes in single variable.

synatax---> [ value1, value2, value3...... ]

squar bracke> index number to access individual elements.

Array Methods
---------------

Push---> add an element in an array at the end.

pop---> which is used to remove the last element.

unshift----> add an element at the start of an array.

shift----> remove an element from the starting

concat(concatination)---> concat(join) the two list.

join---> used to join all the lements and result a string.
ex:[1,2,3],("-"), "1-2-3"

slice---> used to extract part of an array.
splice--> will alter the original array itself.(index, no of elements, value of an element(optional))

indexOf--> used to find index of any alements.



Map---> it creates a new array by applying a function to every element.  [1,2,3,4,5] ---> [3,4,5,6,7] (adding 2 is the function)

Filter---> creates a new array containing all the elements that passes a test. [1,2,3,4,5] ---> [2,4] (even numbers is test) (condition). (arrow function should return a boolean)

Reduce---> is used to recuce an array to a single value.
ex: [1,2,3,4,5] ---> 120 (function is mul)
accumulator---> stores the current data.



Undefined --> Not Defined 
________________________________

A variable that has been declared, but not assigned a value will result undefined.

Null 
____________________
it represents the intentional absence.

Nan(Not a Number)--> Represents Invalid Number Operations.
________________________________

dont have to be equal.( to check whether the variable is Nan use the method "isNan")



Variables
____________________

a container used to store any one of the datatypes.

Initiating Variable in JS:(3 keywords).
------------------------------------------

let,----   the data inside it can be changed(mutable)
var,----   the data inside it can be changed(mutable)
const.--   cannot be changed(immutable)

Index Number
____________________

starts with zero and goes as log as the length of the variable


Alert
____________________

alert()

String Operations 
____________________

concatination (+)
-----------------

attaching, adding. we use it to add to strings.

Length
---------
.length()

length
------------

console.log(first_name.length);

Slicing
-----------

slice(start index, end index)

Case
-----------------
.uppercase()
.lowerscase()



Operations
____________________

Arithmetic Operation: +,-,*,/,%

addition--> operator="+", operants=the numbers.  (1+2)
subtraction--> operator="-", operants=the numbers.  (1-2)
mul--> operator="*", operants=the numbers.  (1*2)
div--> operator="/", operants=the numbers.  (1/2)
reminder--> operator="%", operants=the numbers.  (1%2).


Increment and Decremant
________________________________

a=a+1

++a---> [pre increment]---> increment and assignmemnt
a++---> [post increment]---> assignment and increment


Logical Operations
____________________

it performs Operations with boolean(true or false) and returns a boolean value.

AND(&&)---> it will result true when both values are true, or false.
OR(||)----> true---> atleast one should be true. false---> both should be false.
NOT(!)----> it works with only one boolean value---> reverse the value
X-OR(^)---> if both values are same---> flase, else --> true

NOT>AND>OR--->prioritization


Type casting---> changing the datatype.



Comparison operator
____________________

it is used to compare to values. results boolean values

(==)---> loose equality(value must be same. but datatype is not considerable).

(===)---> strict equality(checks datatype also)

(<=)---> less than or equal to

(>=)---> greater than or equal to.

(<)---> less than

(>)---> greater than.


Ternary Operator 
____________________

syntax:  condition ? first_command : second_command


type casting----> changing the datatype. Number()



Truthy and Falsy
____________________

Truthy: 
-------
       true
       an obj,
       an array,
       any numbers other than 0. (-1,-2)
       stings
falsy:
----------
        false
        undefined
        null
        Nan 
        Number 0




Conditional Clause
________________________

used to execute code based on the conditions.

1) if Statement 

Executes a block of code if the condition is true.

if(){
    //block of code
}

2) else statement

it will execute the code only if the condition applied in if clause is "false". always comes along with if statement.

3) if else

always comes along with if statement.it will execute the code only if the condition applied in if clause is "false" and the condition applied in itself is true

Nested If:
-------------
 an if statement inside another if.




 Loops
 ____________________

 used to execute a block of code again and again.

 For Loop 
 ----------

when the number of iteration is known.

 for---> keyword.

 syntax---> for(init; condition; increment){
        //block of code
 }

 while
 ------
 when the number of iteration isn't known.

 keyword---> while

 syntax--->while(condition){
        //block of code
 }



 DOM- Document Object Model.
 ________________________________

 The DOM is a programming interface for web pages. it represents the structure of web page as a tree-like structure. in this tree, all the HTML elements will be considered as a node.

 using JS we can interact and modify the DOM dynamically.



 Selecting Elements:
 ____________________

 Using ID name
 --------------

 method name---> .getElementById("Id name");
 const para1 = document.getElementById("para1");
 console.log(para1);


Using Class Name 
------------------

method name---> .getElementByClassName("classname");
it will return HTML collection.
const paraList = document.getElementsByClassName("para");
console.log(paraList);

Using Tag Name
--------------

method name--> .getElementByTagName("Tagname")
const paraList = document.getElementsByTagName("p");
console.log(paraList);

Query Selector
----------------
method name---> querySelector("query")
always return only one element
const para1=document.querySelector(".para")
console.log(para1);

Query Selector
----------------
method name---> querySelectorAll("query")
always return multiple elements
const para1=document.querySelectorAll(".para")
console.log(para1);


Modifying Elements in DOM 
________________________________

Text Modifying
----------------

syntax---> 1)element.textContent, 2) innerHTML

Atrributes Modification
------------------------

1)element.getAttribute("attrName")
2)element.setAttribute("attrName","value")
3)element.removeAttribute("attrName")

Changing Styles
---------------
elemet.style.propertyName="value";

Class Name Manipulation
-----------------------

1) .className.add("className")
2) .className.remove("className")
3) .className.toggle("className"); toggling--> inverting

Creating and Inserting an element 
----------------------------------
Creating:
 .createElement("tagName")
Inserting:
.appendChild(element)
.insertBefore(element, ref)


Removing Elements 
-------------------
.remove()
parent.removeChild(ref)

Replacing
--------------

parent.replaceChild(new,old)


Traversing the DOM 
-------------------

.parentElement
.firstElementChild
.lastElementChild
.previousElementSibling
.nextElementSibling